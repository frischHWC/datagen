---
### GET ZOOKEEPER CONFIGS ###

- set_fact:
    kudu_service_name: "{{ cloudera_manager_all_services.json | community.general.json_query(query) }}"
  vars:
    query: "items[?type == 'KUDU'].name | [0]"

- name: DEBUG - kudu_service_name
  debug:
    msg: "{{ kudu_service_name }}"
  when: debug | default(false)

- name: Get Kudu roles repartition
  uri:
    url: "{{ cloudera_manager_api_url }}/clusters/{{ cluster_name }}/services/{{ kudu_service_name }}/roles"
    user: "{{ cloudera_manager_user }}"
    password: "{{ cloudera_manager_password }}"
    method: GET
    force_basic_auth: yes
    status_code: 200
    return_content: yes
    validate_certs: no
    body_format: json
  register: kudu_roles
  when: kudu_exists

- name: Get Kudu full config
  uri:
    url: "{{ cloudera_manager_api_url }}/clusters/{{ cluster_name }}/services/{{ kudu_service_name }}/config?view=full"
    user: "{{ cloudera_manager_user }}"
    password: "{{ cloudera_manager_password }}"
    method: GET
    force_basic_auth: yes
    status_code: 200
    return_content: yes
    validate_certs: no
    body_format: json
  register: kudu_full_config
  when: kudu_exists


- name: Get Kudu Master full config
  uri:
    url: "{{ cloudera_manager_api_url }}/clusters/{{ cluster_name }}/services/{{ kudu_service_name }}/roleConfigGroups/{{ kudu_service_name }}-KUDU_MASTER-BASE/config?view=full"
    user: "{{ cloudera_manager_user }}"
    password: "{{ cloudera_manager_password }}"
    method: GET
    force_basic_auth: yes
    status_code: 200
    return_content: yes
    validate_certs: no
    body_format: json
  register: kudu_master_full_config
  when: kudu_exists

 
### SET Kudu CONFIGS ###

# TLS
- set_fact:
    kudu_tls: "{{ kudu_master_full_config.json | community.general.json_query(query) }}"
  vars:
    query: "items[?name == 'ssl_enabled'].value | [0]"
  when: kudu_exists

- set_fact:
    kudu_tls: "{{ kudu_master_full_config.json | community.general.json_query(query) }}"
  vars:
    query: "items[?name == 'ssl_enabled'].default | [0]"
  when: kudu_exists and kudu_tls == ''

- name: DEBUG - kudu_tls
  debug:
    msg: "{{ kudu_tls }}"
  when: kudu_exists and debug | default(false)

# Set Kudu Master

- set_fact:
    kudu_hosts: "{{ kudu_roles.json | community.general.json_query(query) }}"
  vars:
    query: "items[?type == 'KUDU_MASTER'].hostRef.hostname"
  when: kudu_exists

- name: DEBUG - kudu_hosts
  debug:
    msg: "{{ kudu_hosts }}"
  when: kudu_exists and debug | default(false)

# Set Kudu URL
- set_fact:
    kudu_port: "7051"
  when: kudu_exists and kudu_tls

- set_fact:
    kudu_port: "7050"
  when: kudu_exists and kudu_port == ''

- name: DEBUG - kudu_port
  debug:
    msg: "{{ kudu_port }}"
  when: kudu_exists and debug | default(false)

- set_fact:
    kudu_url: "{% for host in kudu_hosts %}{{ host }}:{{ kudu_port }}{% if not loop.last %},{% endif %}{% endfor %}"
  when: kudu_exists

- name: DEBUG - kudu_url
  debug:
    msg: "{{ kudu_url }}"
  when: kudu_exists and debug | default(false)


# Kerberos
- set_fact:
    kudu_kerberos: "{{ kudu_full_config.json | community.general.json_query(query) }}"
  vars:
    query: "items[?name == 'enable_security'].value | [0]"
  when: kudu_exists

- set_fact:
    kudu_kerberos: "{{ kudu_full_config.json | community.general.json_query(query) }}"
  vars:
    query: "items[?name == 'enable_security'].default | [0]"
  when: kudu_exists and kudu_kerberos == ''

- name: DEBUG - kudu_kerberos
  debug:
    msg: "{{ kudu_kerberos }}"
  when: kudu_exists and debug | default(false)

  