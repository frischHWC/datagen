# WARNING: These two properties are required to make the spring boot work with all dependencies
server.tomcat.additional-tld-skip-patterns=*.jar
spring.mvc.pathmatch.matching-strategy=ANT_PATH_MATCHER
# When deployed to CDP, should be set to 'cdp'
spring.profiles.active=dev

# General conf that should be set when starting the program
server.port=4242
app.name=Data Generator
hadoop.user=datagen
hadoop.home=/user/datagen

# General default Conf
threads=4
number.batches.default=20
number.rows.default=20
data.model.path=src/main/resources/test-models/
data.model.default=full-model.json
custom.data.model=
scheduler.file.path=/tmp/datagen/scheduler/commands.txt

# TLS settings
server.ssl.key-store=dev-support/test_files/keystore.jks
server.ssl.key-store-password=Test1234
server.ssl.trust-store=
server.ssl.trust-store-password=
server.ssl.key-store-type=JKS
server.ssl.key-alias=test-keystore
server.ssl.key-password=Test1234

# Auth config
security.basic.enabled=false
admin.user=admin
admin.password=admin

# Kerberos config
kerberos.enabled=
kerberos.user=datagen
kerberos.keytab=datagen.keytab

# TLS Config
tls.enabled=
truststore.location=
truststore.password=
keystore.location=
keystore.password=

# These are default config file's path in a CDP cluster
# In case below settings are not set, these files are used to extrapolate them
hadoop.core.site.path=dev-support/test_files/core-site.xml
hadoop.hdfs.site.path=dev-support/test_files/hdfs-site.xml
hadoop.ozone.site.path=dev-support/test_files/ozone-site.xml
hadoop.hbase.site.path=dev-support/test_files/hbase-site.xml
hadoop.hive.site.path=dev-support/test_files/hive-site.xml
solr.env.path=dev-support/test_files/solr-env.sh
kafka.conf.client.path=dev-support/test_files/kafka-client.conf
schema.registry.conf.path=
kudu.conf.path=


# Other configurations are either derived from previous or set using APIs
# HDFS
hdfs.uri=
hdfs.auth.kerberos=#{kerberos.enabled}
# It is not needed to fill below configuration if KERBEROS is not activated
hdfs.auth.kerberos.user=#{kerberos.user}
hdfs.auth.kerberos.keytab=#{kerberos.keytab}


# HBASE
hbase.zookeeper.quorum=
hbase.zookeeper.port=
hbase.zookeeper.znode=
hbase.auth.kerberos=#{kerberos.enabled}
# It is not needed to fill below configuration if KERBEROS is not activated
hbase.security.user=#{kerberos.user}
hbase.security.keytab=#{kerberos.keytab}


# OZONE
ozone.service.id=
ozone.auth.kerberos=#{kerberos.enabled}
# It is not needed to fill below configuration if KERBEROS is not activated
ozone.auth.kerberos.user=#{kerberos.user}
ozone.auth.kerberos.keytab=#{kerberos.keytab}


# HIVE
hive.zookeeper.quorum=
hive.zookeeper.znode=
hive.auth.kerberos=#{kerberos.enabled}
# It is not needed to fill below configuration if KERBEROS is not activated
hive.security.user=#{kerberos.user}
hive.security.keytab=#{kerberos.keytab}
hive.truststore.location=#{truststore.location}
hive.truststore.password=#{truststore.password}


# SOLR
solr.zookeeper.quorum=
solr.zookeeper.znode=
solr.tls.enabled=#{tls.enabled}
solr.auth.kerberos=#{kerberos.enabled}
# It is not needed to fill below configuration if KERBEROS is not activated
solr.auth.kerberos.keytab=#{kerberos.keytab}
solr.auth.kerberos.user=#{kerberos.user}
solr.truststore.location=#{truststore.location}
solr.truststore.password=#{truststore.password}
solr.keystore.location=#{keystore.location}
solr.keystore.password=#{keystore.password}


# KAFKA
kafka.brokers=
kafka.security.protocol=
schema.registry.url=
schema.registry.tls.enabled=#{tls.enabled}
# It is not needed to fill below configuration if KERBEROS is not activated (i.e. protocol is PLAINTEXT)
kafka.keystore.location=#{keystore.location}
kafka.truststore.location=#{truststore.location}
kafka.keystore.password=#{keystore.password}
kafka.keystore.key.password=#{keystore.password}
kafka.truststore.password=#{truststore.password}
kafka.sasl.mechanism=
kafka.sasl.kerberos.service.name=
kafka.auth.kerberos.keytab=#{kerberos.keytab}
kafka.auth.kerberos.user=#{kerberos.user}


# KUDU
kudu.master.server=
kudu.auth.kerberos=#{kerberos.enabled}
# It is not needed to fill below configuration if KERBEROS is not activated
kudu.security.user=#{kerberos.user}
kudu.security.keytab=#{kerberos.keytab}
kudu.truststore.location=#{truststore.location}
kudu.truststore.password=#{truststore.password}
