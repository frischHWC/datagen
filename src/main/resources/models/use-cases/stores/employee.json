{
  "model_name" : "employee-stores",
  "Fields" : [ {
    "name" : "employee_id",
    "type" : "INCREMENT_LONG",
    "min" : 1000000000000
  },  {
    "name" : "internal_uuid",
    "type" : "UUID"
  }, {
    "name" : "first_name",
    "type" : "NAME",
    "filters" : [ "USA" ]
  }, {
    "name" : "last_name",
    "type" : "NAME",
    "filters" : [ "France", "USA", "UK", "Italy", "Spain", "Germany" ]
  }, {
    "name" : "email",
    "type" : "STRING",
    "length" : 20,
    "injection" : "${first_name}.${last_name}@company.com"
  }, {
    "name" : "gender",
    "type" : "LINK",
    "link" : "$first_name.sex"
  }, {
    "name" : "phone",
    "type" : "PHONE",
    "filters" : [ "USA" ]
  }, {
    "name" : "specialty",
    "type" : "STRING",
    "length" : 20,
    "possible_values" : [ "Men's shirts", "Women's top", "Men's pants", "Women's dress", "Jackets & Coats", "Kids" ]
  }, {
    "name" : "seniority_level",
    "type" : "STRING",
    "length" : 20,
    "possible_values_weighted" : {
      "JUNIOR" : 2,
      "SENIOR" : 3,
      "SKILLED" : 5
    }
  }, {
    "name" : "associated_store_id",
    "type" : "INTEGER",
    "max" : 10000,
    "min" : 0
  }, {
    "name" : "annual_salary",
    "type" : "INTEGER",
    "formula" : "var factor=1\nvar base=41234\nvar additional=0\n\nif ( \"${gender}\" == \"female\") {\nfactor-=0.1\n}\n\nswitch(\"${seniority_level}\") {\ncase \"SKILLED\": \nfactor+=0.5\nbreak;\ncase \"SENIOR\": \nfactor+=1\nbreak;\ndefault:\nfactor+=0.1\n}\n\nif ( \"${specialty}\" == \"Kids\") {\nadditional+=1000\n}\n\nif ( \"${specialty}\" == \"Women's dress\" && \"${gender}\" == \"FEMALE\") {\nadditional+=2000\n}\n\nif ( \"${specialty}\" == \"Women's top\" && \"${gender}\" == \"MALE\") {\nadditional+=800\n}\n\nif ( \"${specialty}\" == \"Men's shirts\" && \"${gender}\" == \"MALE\") {\nadditional-=500\n}\n\nif ( \"${specialty}\" == \"Men's pants\" && \"${gender}\" == \"FEMALE\") {\nadditional+=1500\n}\n\nif ( \"${specialty}\" == \"Jackets & Coats\") {\nfactor+=0.3\n}\n\n\nMath.round((base + additional)*factor)\n\n"
  },{
    "name" : "start_date",
    "type" : "BIRTHDATE",
    "min_date" : "01/01/2019",
    "max_date" : "01/01/2024"
  }, {
    "name" : "city_of_residence",
    "type" : "CITY",
    "filters" : [ "USA" ]
  }, {
    "name" : "country_of_residence",
    "type" : "LINK",
    "link" : "$city_of_residence.country"
  }, {
    "name" : "password_hashed",
    "type" : "HASH_MD5",
    "length" : 50
  },
    {
      "name" : "date_of_birth",
      "type" : "BIRTHDATE",
      "min_date" : "01/01/1970",
      "max_date" : "01/01/2004"
    }, {
      "name" : "city_of_birth",
      "type" : "CITY",
      "filters" : [ "USA", "France", "UK", "Germany", "Spain", "Italy" ]
    }, {
      "name" : "country_of_birth",
      "type" : "LINK",
      "link" : "$city_of_birth.country"
    }, {
      "name" : "marital_status",
      "type" : "STRING",
      "length" : 20,
      "possible_values_weighted" : {
        "MARRIED" : 12,
        "SINGLE" : 5,
        "FREE_UNION" : 7,
        "DIVORCED" : 3
      }
    }, {
      "name" : "last_medical_exam_date",
      "type" : "BIRTHDATE",
      "min_date" : "01/01/2024",
      "max_date" : "11/11/2024"
    }, {
      "name" : "emergency_phone_number",
      "type" : "PHONE",
      "filters" : [ "USA" ]
    }, {
      "name" : "emergency_contact_name",
      "type" : "NAME",
      "filters" : [ "USA" ]
    }, {
      "name" : "available_to_work_on_week_end",
      "type" : "BOOLEAN",
      "possible_values_weighted" : {
        "false" : 3,
        "true" : 2
      }
    }, {
      "name" : "wish_not_work_on",
      "type" : "STRING",
      "length" : 20,
      "possible_values_weighted" : {
        "THURSDAY" : 3,
        "WEDNESDAY" : 11,
        "SATURDAY" : 14,
        "SUNDAY" : 20,
        "TUESDAY" : 1,
        "FRIDAY" : 6,
        "MONDAY" : 8
      }
    } ],
  "Table_Names" : {
    "HIVE_HDFS_FILE_PATH" : "/tmp/datagen-employee/",
    "HDFS_FILE_NAME": "employee",
    "HIVE_DATABASE" : "datagen",
    "HIVE_TABLE_NAME" : "employee"
  },
  "Options" : {
    "ONE_FILE_PER_ITERATION" : true,
    "CSV_HEADER" : true,
    "KAFKA_MESSAGE_TYPE" : "JSON",
    "DELETE_PREVIOUS" : true,
    "HIVE_TABLE_FORMAT" : "PARQUET",
    "HIVE_TABLE_TYPE" : "EXTERNAL",
    "HIVE_ON_HDFS" : true,
    "PARQUET_DICTIONARY_ENCODING" : true
  }
}